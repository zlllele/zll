package net.htjs.pt4.cms.service.impl;

import net.htjs.pt4.cms.dao.ChannelMapper;
import net.htjs.pt4.cms.dao.ContentMapper;
import net.htjs.pt4.cms.dao.ContentTypeMapper;
import net.htjs.pt4.cms.service.IChannelService;
import net.htjs.pt4.cms.service.IContentService;
import net.htjs.pt4.cms.service.IContentTypeService;
import net.htjs.pt4.core.Datagrid;
import net.htjs.pt4.core.entity.DaoException;
import net.htjs.pt4.core.entity.SaveException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
* Description:
* author  wangpengqi
* date 2017/09/14
*/
@Service
@Transactional
public class ContentService implements IContentService {

private final Logger logger = LoggerFactory.getLogger(ContentService.class);

@Resource
private ContentMapper contentMapper;

//
@Override
public Datagrid selectContentsByChannel(Map map, int pageNum, int pageSize) throws Exception {
	PageHelper.startPage(pageNum, pageSize);
    List<Map> list = contentMapper.selectContentsByChannel(map);
    PageInfo pageInfo = new PageInfo(list);
    for (Map u : list) {
        u.put("TOTAL", pageInfo.getTotal());
    }

    Datagrid datagrid = new Datagrid(pageInfo.getTotal(), pageInfo.getList());

    return datagrid;
}
////
//@Override
//public int insertChannel(Map map) throws SaveException {
//	try {
//		channelMapper.insertChannel(map);
//    } catch (DaoException e) {
//        logger.error("添加出错", e);
//        throw new SaveException(e);
//    }
//    return 1;
//}
////
//@Override
//public Map findById(String id) throws Exception {
//    Map<String,Object> map = channelMapper.selectChannelById(id);
//    return map;
//}
////
//@SuppressWarnings("unchecked")
//@Override
//public int updateChannelById(Map map) throws SaveException {
//	try {
//		channelMapper.updateChannelById(map);
//		if (((String)map.get("is_display")).equals("0")){
//			map.put("areaId", (String)map.get("channel_id"));
//			channelMapper.selectLowerChannelsForDelete(map);
//		}
//    } catch (DaoException e) {
//        logger.error("添加出错", e);
//        throw new SaveException(e);
//    }
//    return 1;
//}
//
//@Override
//public int deleteById(String id) throws Exception {
//	try {
//		Map<String,Object> userMap = new HashMap<String,Object>();
//		channelMapper.deleteById(id);
//    } catch (DaoException e) {
//        logger.error("删除出错", e);
//        throw new SaveException(e);
//    }
//    return 1;
//}

}


