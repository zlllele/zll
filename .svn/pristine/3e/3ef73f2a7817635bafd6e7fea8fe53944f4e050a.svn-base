//使用窗口组件加载时注释下面的代码
$(document).ready(function() {
	yhgl_save.onLoad();
});
/**
 * <ol>
 * <li>date:13-11-24</li>
 * <li>editor:李强</li>
 * <li>创建文档</li>
 * <li>新增、修改参数</li>
 * <li>功能：用户管理功能</li>
 * </ol>
 */
var yhgl_save = (function() {
	// 私有属性
	var curSeg, formSave = "formSave", formSave_, winObj, winParam;
	var isCzryDmEditAble = false;
	// 是否是添加
	var bAdd = true;
	// 私有方法
	var setVal = function(tagID, val) {
		baseTools.byId(formSave_ + tagID).value = val;
	};

	var initLayout = function() {
		// 初始化页面UI
		formSave_ = formSave + "_";
		baseTools.setIdByName([ formSave ]);
		winObj = frameElement.api;
		winParam = winObj.data;
		bAdd = winParam.other.msg == '添加';
		// xbDbm = jdglTools.getDmb("DM_XB");
//		jdglTools.addOptionToSelect(formSave_ + "XB_DM", "DM_XB");
//		jdglTools.addOptionToSelect(formSave_ + "RYLB", "DM_RYLB");
		// 获取平台参数（人员编号是否可以手工维护）
//		isCzryDmEditAble = jdglTools.getAccountCsb('104') == '1';

		/*if (bAdd) {
			setVal("ZZJG_MC", winParam.other.ZZJG_MC);
			if (!isCzryDmEditAble) {// 人员代码不允许手工维护
				$("TD[name=rydm_td]").remove();
				// 用户姓名变更时，根据用户姓名生成登录名
				$("#" + formSave_ + "CZRY_MC").change(function() {
					baseTools.xhrAjax({
						url : '/server/platform/zzjggl/yhgl/getUserLoginName.do',
						params : {
							CZRY_MC : this.value
						},
						callback : [ function(jsonObj, xhrArgs) {
							if (jsonObj.code == 0) {
								$("#" + formSave_ + "USERNAME").val(jsonObj.data);
							}
						} ]
					});
				});
			} else {// 人员代码由手工维护，人员代码修改时，将登录名同步为人员代码
				$("#" + formSave_ + "CZRY_DM").change(function() {
					$("#" + formSave_ + "USERNAME").val(this.value);
				});
			}
		} else {
			$("#" + formSave_ + "CZRY_MC").attr("disabled", "true");
			$("#" + formSave_ + "CZRY_DM").attr("disabled", "true");
			$(".ADDONLY").hide();
		}*/
		
		
//		if (bAdd) {// 修改的时候进行查询
//			$("#" + formSave_ + "CZRY_DM").attr("disabled", "true");
//		}

		winObj.button({
			name : '保存',
			focus : true,
			callback : function() {
				curSeg.onSave();
				return false;
			}
		}, {
			name : '关闭'
		});

		baseTools.checkFormLock([ formSave ]);
	};
	// 公有方法
	return {
		onLoad : function() {
			curSeg = yhgl_save;
			initLayout();
			// 设置添加状态
			// baseTools.byId(formSave_ + "ZZJG_MC").focus();
//			if (winParam.other.CZRY_DM != '14100000000') {
//				baseTools.byId(formSave_ + "RYLB").disabled = "";
//			}
			if (!bAdd) {// 修改的时候进行查询
				curSeg.onQuery();
			} else {
				Validator.validate(baseTools.byId(formSave), 3);
			}

			// 删除组件释放内存
			$(window).unload(function() {
			});
		},
		// 查询数据
		onQuery : function() {
			baseTools.xhrAjax({
				url : "/contenttype/"+winParam.other.type_id,
				type : "GET",
//				params : {
//					type_id : winParam.other.type_id
//				},
				callback : [ curSeg.pageFlowControl ]
			});
		},
		// 保存数据
		onSave : function() {
			if (!Validator.validate(baseTools.byId(formSave))) {
				Validator.validate(baseTools.byId(formSave), 3);
				return;
			}
			var patrn = /^\d+$/;
			if (!$("#" + formSave_ + "img_width").val().match(patrn)){
				alert("图片宽度不合法，请确认后重新输入！！！");
				return;
			}
			if (!$("#" + formSave_ + "img_height").val().match(patrn)){
				alert("图片高度不合法，请确认后重新输入！！！");
				return;
			}
			var url = "/contenttype";
			
			var params = {};
			if (!bAdd) {
				params._method = "PUT";
				params.type_id = winParam.other.type_id;
			}
			baseTools.xhrAjax({
				url : url,
				forms : [ formSave ],
				params : params,
				callback : [ curSeg.pageFlowControl ]
			});
		},

		// 绑定数据
		onBindData : function(jsonObj, xhrArgs) {
//			$("#" + formSave_ + "CZRY_MC").attr("disabled", "true");
//			$("#" + formSave_ + "CZRY_DM").attr("disabled", "true");
			
			baseTools.bindFormData(formSave, jsonObj.data);
//			$("#" + formSave_ + "SKSBBH").val(winParam.other.SKSBBH);
//			$("#" + formSave_ + "KPR").val(winParam.other.KPR);
//			$("#" + formSave_ + "SKR").val(winParam.other.SKR);
//			$("#" + formSave_ + "FHR").val(winParam.other.FHR);
			Validator.validate(baseTools.byId(formSave), 3);
		},
		// 关闭窗口
		onCloseWin : function() {
			// 调用父窗口方法
			winObj.opener.jsqxList.onQuery();
			setTimeout(function() {
				winObj.close();
			},100)
		},
		/**
		 * 工具栏按钮操作
		 * 
		 * @param cmd
		 *            操作代码
		 */
		onToolbarClick : function(cmd) {
			switch (cmd) {
			case 1: // 添加类型
				curSeg.onSave();
				break;
			case 2: // 功能页面
				curSeg.onOpenSaveWin();
				break;
			case 3: // 打印页面
				break;
			case -1:
				curSeg.onCloseWin();
				break;
			default:
				alert("未知的操作命令!");
			}
		},
		/**
		 * 需要的时候可以覆盖该方法 在ajax调用中，在得到数据时调用该方法
		 */
		pageFlowControl : function(jsonObj, xhrArgs) {
			switch (parseInt(jsonObj.code)) {
			// 查询操作返回标志
			case 0:
				curSeg.onBindData(jsonObj, xhrArgs);
				break;
			// 添加、更新以及状态更新操作返回标志
			case 1:
				alert(jsonObj.msg);
				curSeg.onCloseWin();
				break;
			// 删除操作返回标志
			case 2:
				alert(jsonObj.msg);
				break;
			case -2:// 其它错误返回标志
				alert(jsonObj.msg);
				baseTools.hideMash();
				break;
			case 99:// 其它错误返回标志
				alert(jsonObj.msg);
				baseTools.hideMash();
				break;
			case -3:// cookie 失效请重新登录
				alert(jsonObj.msg);
				baseTools.gotoLogin();
				break;
			default:
			}
		}
	};
})();